// This is an autogenerated file from Firebase Studio.

'use server';

/**
 * @fileOverview Generates AI-powered suggestions on how to adjust spending to better reach budget goals.
 *
 * - generateBudgetAdjustments - A function that handles the generation of budget adjustment suggestions.
 * - GenerateBudgetAdjustmentsInput - The input type for the generateBudgetAdjustments function.
 * - GenerateBudgetAdjustmentsOutput - The return type for the generateBudgetAdjustments function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const GenerateBudgetAdjustmentsInputSchema = z.object({
  income: z.number().describe('The user\'s total income.'),
  expenses: z.record(z.number()).describe('A map of expense categories to amounts spent.'),
  goal: z.number().describe('The user\'s target balance.'),
});
export type GenerateBudgetAdjustmentsInput = z.infer<
  typeof GenerateBudgetAdjustmentsInputSchema
>;

const GenerateBudgetAdjustmentsOutputSchema = z.object({
  suggestions: z
    .array(z.string())
    .describe('A list of AI-generated suggestions on how to adjust spending.'),
});
export type GenerateBudgetAdjustmentsOutput = z.infer<
  typeof GenerateBudgetAdjustmentsOutputSchema
>;

export async function generateBudgetAdjustments(
  input: GenerateBudgetAdjustmentsInput
): Promise<GenerateBudgetAdjustmentsOutput> {
  return generateBudgetAdjustmentsFlow(input);
}

const prompt = ai.definePrompt({
  name: 'generateBudgetAdjustmentsPrompt',
  input: {schema: GenerateBudgetAdjustmentsInputSchema},
  output: {schema: GenerateBudgetAdjustmentsOutputSchema},
  prompt: `You are a personal finance advisor. Given the user's income, expenses, and financial goal, provide specific, actionable suggestions on how to adjust their spending to better reach their goal.

Income: {{{income}}}
Expenses:
{{#each expenses}}
  - {{@key}}: {{{this}}}
{{/each}}
Goal: {{{goal}}}

Suggestions:`, // Keep as a single line.
});

const generateBudgetAdjustmentsFlow = ai.defineFlow(
  {
    name: 'generateBudgetAdjustmentsFlow',
    inputSchema: GenerateBudgetAdjustmentsInputSchema,
    outputSchema: GenerateBudgetAdjustmentsOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
